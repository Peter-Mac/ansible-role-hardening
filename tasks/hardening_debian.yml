---
# file: roles/hardening/tasks/hardening_debian.yml
# TODO: http://www.newnettechnologies.com/linux-server-hardening.html
- name: Install recommended security packages
  apt: pkg={{ item }} state=latest
  with_items:
    - aide
    - apt-show-versions
    - auditd
    - binutils
    - chkrootkit
    - clamav
    - clamav-daemon
    - debsums
    - fail2ban
    - iptables-persistent
    - libdate-manip-perl
    - libpam-cracklib
    - libreadline5
    - libruby
    - mailutils
    - ruby
    - ssl-cert
    - sysstat
    - unattended-upgrades
    - unhide.rb

- name: Enable sysstat
  service: name=sysstat enabled=yes state=started

- name: Enable automatic security updates
  apt: pkg=unattended-upgrades
       state=latest
       update_cache=yes
       cache_valid_time=7200

- name: Configure automatic security update
  template: dest=/etc/apt/apt.conf.d/50unattended-upgrades
            src=unattended-upgrades.j2
            mode=0640
            group=adm
            backup=yes

- name: Configure automatic updates settings
  template: dest=/etc/apt/apt.conf.d/02periodic
            src=apt-periodic.j2
            mode=0640
            group=adm
            backup=yes

- name: Configure fail2ban
  template: dest=/etc/fail2ban/jail.local
            src=jail.local.j2
            mode=0640
            group=adm
            backup=yes
  notify: restart fail2ban

- include: logwatch.yml
  when: hardening_install_logwatch == 'true'

- name: Check if rkhunter binary exists
  stat: path=/usr/bin/rkhunter
  register: rkhunter_exists

- name: Get RKHunter
  get_url: url=http://downloads.sourceforge.net/project/rkhunter/rkhunter/1.4.2/rkhunter-1.4.2.tar.gz dest=/usr/local/src/rkhunter-1.4.2.tar.gz
  when: rkhunter_exists.stat.exists == False

- name: extract RKHunter
  unarchive: src=/usr/local/src/rkhunter-1.4.2.tar.gz dest=/usr/local/src copy=no
  when: rkhunter_exists.stat.exists == False

- name: install RKHunter
  shell: ./installer.sh --layout /usr --install
  args:
    chdir: /usr/local/src/rkhunter-1.4.2
  when: rkhunter_exists.stat.exists == False

- name: Check if lynis binary exists
  stat: path=/usr/local/src/lynis/lynis
  register: lynis_exists

- name: Get lynis 2.1.1
  get_url: url=https://cisofy.com/files/lynis-2.1.1.tar.gz dest=/usr/local/src
  when: lynis_exists.stat.exists == False

- name: Extract lynis
  unarchive: src=/usr/local/src/lynis-2.1.1.tar.gz dest=/usr/local/src copy=no
  when: lynis_exists.stat.exists == False

- name: Change default UMASK in /etc/login.defs
  lineinfile:
    dest=/etc/login.defs
    state=present
    regexp='^#?{{ item.key }}'
    line='{{ item.key }} {{ item.value }}'
  with_items:
    - { key: 'UMASK', value: '027'}

- name: Change default umask in /etc/init.d/rc
  lineinfile:
    dest=/etc/init.d/rc
    state=present
    regexp='^#?{{ item.key }}'
    line='{{ item.key }} {{ item.value }}'
  with_items:
    - { key: 'umask', value: '027'}

- name: Adjust kernel options
  sysctl:
    state=present
    name={{ item.key }}
    value={{ item.value }}
  with_items: hardening_kernel_settings
  when: hardening_kernel
  notify: reload sysctl.conf

- name: Make OpenSSH secure(r)
  lineinfile:
    dest=/etc/ssh/sshd_config
    state=present
    regexp='^#?{{ item.key }}'
    line='{{ item.key }} {{ item.value }}'
  with_items: hardening_ssh_settings
  when: hardening_ssh
  notify: restart ssh

- name: Finish hardening and restart ssh
  service: name=ssh state=restarted
